{"version":3,"file":"static/js/274.70355c71.chunk.js","mappings":"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","sources":["redux/cars/carsSelectors.js","redux/filter/filterSelectors.js","helpers/getFilteredCars.js","components/ButtonLoadMore/ButtonLoadMore.styled.jsx","components/ButtonLoadMore/ButtonLoadMore.jsx","helpers/createOptions.js","helpers/priceOptions.js","helpers/removeDuplicatesAndSort.js","components/Filter/Select/Select.styled.jsx","components/Filter/Select/Select.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Catalog.jsx"],"sourcesContent":["export const selectCars = state => state.cars;\n","export const selectFilter = state => state.filter;\n\nexport const selectMake = state => state.filter.make;\nexport const selectPrice = state => state.filter.price;\nexport const selectMileageMin = state => state.filter.mileageMin;\nexport const selectMileageMax = state => state.filter.mileageMax;\n","export const getFilteredCars = (payload, filter) => {\n  const pars = str => parseInt(str.replace(/\\D/g, ''), 10);\n  const filteredCars = payload.filter(\n    ({ make, rentalPrice, mileage }) =>\n      make.toLowerCase() === filter.make &&\n      pars(rentalPrice) <= filter.price &&\n      mileage > filter.mileageMin &&\n      mileage < filter.mileageMax\n  );\n  \n  return filteredCars;\n};\n","import styled from '@emotion/styled';\n\nexport const BoxBtn = styled.div`\n  width: 100%;\n  margin-top: 100px;\n  background-color: inherit;\n  text-align: center;\n`;\n\nexport const Button = styled.button`\n  color: var(--accent-color);\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5;\n  text-decoration-line: underline;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  margin: 0 auto;\n`;\n","import { useDispatch } from 'react-redux';\n\nimport { fetchCars } from 'redux/cars/carsOperations';\nimport { Button, BoxBtn } from './ButtonLoadMore.styled';\n\nconst ButtonLoadMore = ({ page, setPage, setShowButton }) => {\n  const dispatch = useDispatch();\n\n  const handleLoadMore = async () => {\n    const { payload } = await dispatch(fetchCars(page + 1));\n    setPage(prevPage => prevPage + 1);\n    if (payload.length >= 8) {\n      setShowButton(true);\n    } else {\n      setShowButton(false);\n    }\n  };\n\n  return (\n    <BoxBtn>\n      <Button onClick={handleLoadMore}>Load more</Button>\n    </BoxBtn>\n  );\n};\n\nexport default ButtonLoadMore;\n","export const createOptions = array => {\n  const options = array.map(option => ({\n    value: option,\n    label: option,\n  }));\n  return options;\n};\n","let priceArray = [];\n\nconst priceOptions = () => {\n  for (let i = 30; i <= 500; i += 10) {\n    priceArray.push(i);\n  }\n  return priceArray;\n};\n\npriceOptions();\n\nexport { priceArray };\n","export const removeDuplicatesAndSort = array => {\n  const uniqueArray = array.filter((value, index, self) => {\n    return self.indexOf(value) === index;\n  });\n\n  return uniqueArray.sort();\n};\n","import styled from '@emotion/styled';\nimport Select from 'react-select';\n\nexport const SelectWrapper = styled.div`\n  width: ${props => props.width};\n  text-align: left;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 8px;\n`;\n\nexport const SelectInput = styled(Select)`\n  height: 48px;\n  .custom-select-arrow {\n    transition: transform 0.5s; \n  }\n\n  .custom-select.is-open .custom-select-arrow {\n    transform: rotate(180deg); \n  }\n\n  .custom-select.is-open.custom-select-menu::-webkit-scrollbar {\n    width: 8px; \n    background-color: red;\n  }\n\n  #react-select-2-listbox,\n  #react-select-3-listbox {\n    border-radius: 14px;\n    overflow: hidden;\n  }\n`;\n","import { createOptions } from 'helpers/createOptions';\nimport { priceArray } from 'helpers/priceOptions';\nimport { removeDuplicatesAndSort } from 'helpers/removeDuplicatesAndSort';\n\nimport makes from 'makes.json';\n\nimport { Label, SelectInput, SelectWrapper } from './Select.styled';\n\nconst Select = ({ textLabel, name, width, handleChange, value, brand }) => {\n  const sortMakes = removeDuplicatesAndSort(makes);\n  const brandOptions = createOptions(sortMakes);\n  const priceOptions = createOptions(priceArray);\n\n  return (\n    <SelectWrapper width={width}>\n      <Label htmlFor={name}>{textLabel}</Label>\n      <SelectInput\n        id={name}\n        options={brand ? brandOptions : priceOptions}\n        className=\"custom-select custom-select-menu\"\n        onChange={handleChange}\n        value={value}\n        styles={{\n          dropdownIndicator: (base, state) => ({\n            ...base,\n            transition: 'transform 0.5s',\n            transform: state.selectProps.menuIsOpen ? 'rotate(180deg)' : 'none',\n          }),\n          control: (base, _) => ({\n            ...base,\n            backgroundColor: 'var(--input-bg-color)',\n            borderRadius: '14px',\n            border: 'none',\n            output: 'none',\n            height: '48px',\n          }),\n        }}\n      />\n    </SelectWrapper>\n  );\n};\n\nexport default Select;\n","import styled from '@emotion/styled';\nimport { NumericFormat } from 'react-number-format';\n\nexport const FilterForm = styled.form`\n  margin: 0 auto;\n  margin-bottom: 50px;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 18px;\n`;\n\nexport const MileageWrapper = styled.div`\n  text-align: left;\n`;\n\nexport const LabelMileage = styled.label`\n  display: block;\n  margin-bottom: 8px;\n`;\n\nexport const Mileage = styled.div`\n  display: flex;\n  gap: 1px;\n  background-color: rgba(138, 138, 137, 0.2);\n\n  border: none;\n  border-radius: 14px;\n  overflow: hidden;\n`;\nexport const InputWrapper = styled.div`\n  position: relative;\n`;\n\nexport const Label = styled.p`\n  position: absolute;\n  left: 24px;\n  top: 15px;\n`;\n\nexport const Input = styled(NumericFormat)`\n  padding-left: ${props => props.padding};\n  width: 160px;\n  height: 48px;\n  background-color: var(--input-bg-color);\n  border: none;\n  outline: none;\n`;\n\nexport const SearchButton = styled.button`\n  align-self: end;\n  padding: 14px 44px;\n  height: 48px;\n  border-radius: 12px;\n  background-color: var(--accent-color);\n  color: var(--invert-color);\n  transition: background-color 250ms ease-in-out;\n  cursor: pointer;\n  border: none;\n\n  &:hover {\n    background-color: var(--accent-hover);\n  }\n  &:disabled {\n    background-color: var(--secondary-color);\n    opacity: 0.8;\n    cursor: auto;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  fetchFirstPage,\n} from 'redux/cars/carsOperations';\nimport { setFilter } from 'redux/filter/filterSlice';\n\nimport Select from './Select/Select';\n\nimport {\n  FilterForm,\n  Input,\n  InputWrapper,\n  Label,\n  LabelMileage,\n  Mileage,\n  MileageWrapper,\n  SearchButton,\n} from './Filter.styled';\n\nconst Filter = ({ setFiltering, setShowButton }) => {\n  const [valuePrice, setValuePrice] = useState({\n    value: '',\n    label: 'To $',\n  });\n  const [valueBrand, setValueBrand] = useState({\n    value: '',\n    label: 'Enter the text',\n  });\n  const [price, setPrice] = useState('');\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [mileageMin, setMileageMin] = useState('');\n  const [mileageMax, setMileageMax] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (\n      valueBrand.label !== 'Enter the text' ||\n      valuePrice.label !== 'To $' ||\n      mileageMin !== '' ||\n      mileageMax !== ''\n    ) {\n      setIsDisabled(false);\n    } else {\n      setIsDisabled(true);\n    }\n  }, [valueBrand, valuePrice, mileageMin, mileageMax]);\n\n  const handleChangePrice = selectedOption => {\n    const formattedValue = `To ${selectedOption.value}$`;\n    setValuePrice({ label: formattedValue, value: formattedValue });\n    setPrice(selectedOption.value);\n  };\n\n  const handleChangeBrand = selectedOption => {\n    setValueBrand({\n      label: selectedOption.value,\n      value: selectedOption.value,\n    });\n  };\n\n  const handleChangeMileage = e => {\n    const newValue = e.target.value;\n    switch (e.target.name) {\n      case 'mileageMin':\n        setMileageMin(newValue);\n        break;\n      case 'mileageMax':\n        setMileageMax(newValue);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSearchClick = async e => {\n    e.preventDefault();\n    const newFilterQuery = {\n      make: valueBrand.value.toLowerCase().trim(),\n      price: price || '500',\n      mileageMin: mileageMin.split(',').join('') || 0,\n      mileageMax: mileageMax.split(',').join('') || 99999,\n    };\n    dispatch(setFilter(newFilterQuery));\n    setFiltering(true);\n  };\n\n  const handleClearClick = e => {\n    e.preventDefault();\n    dispatch(fetchFirstPage());\n    setFiltering(false);\n    setValuePrice({\n      value: '',\n      label: 'To $',\n    });\n    setValueBrand({\n      value: '',\n      label: 'Enter the text',\n    });\n    setMileageMin('');\n    setMileageMax('');\n    setShowButton(true);\n  };\n\n  return (\n    <FilterForm>\n      <Select\n        textLabel=\"Car brand\"\n        name=\"make\"\n        brand\n        value={valueBrand}\n        handleChange={handleChangeBrand}\n        width={'224px'}\n      />\n      <Select\n        textLabel=\"Price/ 1 hour\"\n        name=\"price\"\n        value={valuePrice}\n        handleChange={handleChangePrice}\n        width={'125px'}\n      />\n      <MileageWrapper>\n        <LabelMileage htmlFor=\"fromMileage\">Сar mileage / km</LabelMileage>\n        <Mileage>\n          <InputWrapper>\n            <Label>From</Label>\n            <Input\n              value={mileageMin}\n              name=\"mileageMin\"\n              id=\"fromMileage\"\n              format=\"##,###\"\n              maxLength={6}\n              decimalScale={3}\n              thousandSeparator={true}\n              onChange={handleChangeMileage}\n              padding=\"65px\"\n            />\n          </InputWrapper>\n          <InputWrapper>\n            <Label>To</Label>\n            <Input\n              name=\"mileageMax\"\n              id=\"toMileage\"\n              padding=\"45px\"\n              format=\"##,###\"\n              maxLength={6}\n              decimalScale={3}\n              thousandSeparator={true}\n              value={mileageMax}\n              onChange={handleChangeMileage}\n            />\n          </InputWrapper>\n        </Mileage>\n      </MileageWrapper>\n      <SearchButton onClick={handleSearchClick} disabled={isDisabled}>\n        Search\n      </SearchButton>\n      <SearchButton onClick={handleClearClick} disabled={isDisabled}>\n        Clear\n      </SearchButton>\n    </FilterForm>\n  );\n};\n\nexport default Filter;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  fetchAllCarsForFilter,\n  fetchFirstPage,\n} from 'redux/cars/carsOperations';\nimport { selectCars } from 'redux/cars/carsSelectors';\nimport { selectFilter } from 'redux/filter/filterSelectors';\nimport { getFilteredCars } from 'helpers/getFilteredCars';\n\nimport ButtonLoadMore from 'components/ButtonLoadMore/ButtonLoadMore';\nimport CarsList from 'components/CarsList/CarsList';\nimport Filter from 'components/Filter/Filter';\nimport Loader from 'components/Loader/Loader';\n\nconst Catalog = () => {\n  const dispatch = useDispatch();\n  const { cars, isLoading } = useSelector(selectCars);\n  const [showButton, setShowButton] = useState(false);\n  const [page, setPage] = useState(1);\n  const filter = useSelector(selectFilter);\n  const [filterCars, setFilterCars] = useState([]);\n  const [filtering, setFiltering] = useState(false);\n\n  useEffect(() => {\n    if (page === 1) {\n      dispatch(fetchFirstPage());\n      setShowButton(true);\n    }\n  }, [dispatch, page]);\n\n  useEffect(() => {\n    if (filtering) {\n      (async () => {\n        const { payload } = await dispatch(fetchAllCarsForFilter());\n        const visibleCars = await getFilteredCars(payload, filter);\n        setFilterCars(visibleCars);\n      })();\n    }\n  }, [filtering, filter, dispatch]);\n\n  return (\n    <section>\n      <Filter\n        setFilterCars={setFilterCars}\n        setFiltering={setFiltering}\n        setShowButton={setShowButton}\n      />\n      <CarsList carsArray={filtering ? filterCars : cars} />\n      {!filtering &&\n        (isLoading ? (\n          <Loader />\n        ) : (\n          showButton && (\n            <ButtonLoadMore\n              page={page}\n              setPage={setPage}\n              setShowButton={setShowButton}\n            />\n          )\n        ))}\n    </section>\n  );\n};\n\nexport default Catalog;\n"],"names":["selectCars","state","cars","selectFilter","filter","getFilteredCars","payload","make","rentalPrice","mileage","toLowerCase","parseInt","replace","price","mileageMin","mileageMax","BoxBtn","styled","Button","page","setPage","setShowButton","dispatch","useDispatch","handleLoadMore","fetchCars","prevPage","length","onClick","createOptions","array","map","option","value","label","priceArray","i","push","priceOptions","SelectWrapper","props","width","Label","SelectInput","Select","textLabel","name","handleChange","brand","sortMakes","makes","index","self","indexOf","sort","brandOptions","htmlFor","id","options","className","onChange","styles","dropdownIndicator","base","transition","transform","selectProps","menuIsOpen","control","_","backgroundColor","borderRadius","border","output","height","FilterForm","MileageWrapper","LabelMileage","Mileage","InputWrapper","Input","NumericFormat","padding","SearchButton","setFiltering","useState","valuePrice","setValuePrice","valueBrand","setValueBrand","setPrice","isDisabled","setIsDisabled","setMileageMin","setMileageMax","useEffect","handleChangeMileage","e","newValue","target","handleSearchClick","preventDefault","newFilterQuery","trim","split","join","setFilter","selectedOption","formattedValue","format","maxLength","decimalScale","thousandSeparator","disabled","fetchFirstPage","useSelector","isLoading","showButton","filterCars","setFilterCars","filtering","fetchAllCarsForFilter","visibleCars","CarsList","carsArray","Loader"],"sourceRoot":""}